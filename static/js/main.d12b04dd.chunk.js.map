{"version":3,"sources":["components/Home/RunningTransactions.js","components/Home/RunningBlocks.js","components/Home/RandomAssets.js","components/Home/Home.js","components/TransactionItem/TransactionItem.js","components/Transactions/Transactions.js","components/Transaction/Transaction.js","components/Block/Block.js","components/Header/Header.js","components/Address/Address.js","components/Asset/Asset.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["RunningTransactions","props","list","runningTransactions","map","tx","key","txid","className","to","hostingURL","length","substring","valueOut","RunningBlocks","runningBlocks","block","height","hash","size","sort","a","b","RandomAssets","randomAssets","asset","name","link","amount","Home","TransactionItem","vinList","this","transaction","vin","addrIn","coinbase","n","addr","onClick","setAddress","value","voutList","vout","addrOut","scriptPubKey","addresses","fees","Component","Transactions","txList","transactions","setStateElement","Transaction","setTransaction","match","params","txHash","t","Date","Unix_timestamp","time","blocktime","blockhash","Block","controller","AbortController","signal","clearBlock","setBlock","blockHash","abort","previousblockhash","nextblockhash","Button","variant","setMoreBlockTransactions","Styles","styled","div","Header","list0","searchTest","slice","item","convertToUrlNew","searchClicked","data-category","data-hash","list1","JSON","stringify","list2","list3","addrStr","list4","Navbar","expand","fixed","Brand","Nav","autoComplete","placeholder","onChange","handleChange","bind","search","Address","clearAddress","address","totalReceived","totalSent","balance","txApperances","setMoreAddressTransactions","Asset","Object","keys","units","reissuable","has_ipfs","block_height","Layout","Container","children","apiUrl","assetURL","txURL","stateKeyURL","emptyBlock","emptyTransactions","emptyAddress","emptyRunningTransactions","emptySearchTest","apiSpecialCharacter","apiSpecialMap","urlSpecialCharacter","urlSpecialMap","App","replaceAtNew","string","index","replace","inputString","position","outputString","i","indexOf","state","temp","searchMatch","latestBlock","myRef","React","createRef","newTransaction","newTransactionsList","pop","setState","newBlockData","newBlocksList","setLatestBlock","blockHeights","push","Math","max","stateKey","url","getAPIElement","then","data","catch","error","console","fetch","blockResponse","json","firstTransactions","transactionFetches","response","Promise","all","fetchBlock","blockData","transactionHash","transactionData","currTransactions","loadMoreBlockTransactions","newTransactions","concat","addressHash","addressResponse","fetchAddress","addressData","loadMoreAddressTransactions","currArray","unshift","endPoint","itemString","toString","resolve","reject","convertToApi","replaceAt","convertToUrl","app","randomAsset","floor","random","assetName","assetData","addStateElement","info","blocks","callBlocks","addRandomAssets","addRecentBlocks","script","document","createElement","src","async","body","appendChild","originalThis","setTimeout","socket","io","on","emit","txData","addRunningTransaction","log","addRunningBlock","event","target","clearThenSpeculativeSearch","speculativeSearch","fetchSearch","dataset","category","clearSearch","object","newSearchObject","newSearchMatchList","searchTerm","searchFetches","searchCategory","searchURL","trial","searchData","Fragment","path","exact","render","routerProps","onScroll","handleScroll","Boolean","window","location","hostname","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d12b04dd.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RunningTransactions = (props) => {\n\tconst list = props.runningTransactions.map((tx) => {\n\t\treturn (\n\t\t\t<div key={tx.txid} className='dataRow'>\n\t\t\t\t<div className='transactionItem'>\n\t\t\t\t\t<Link to={props.hostingURL + '/tx/' + tx.txid}>\n\t\t\t\t\t\t{tx.txid.length !== 1 ? tx.txid.substring(0, 40) + '...' : ''}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className='transactionItem'>\n\t\t\t\t\t{tx.valueOut} {tx.txid.length !== 1 ? 'RVN' : ' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t});\n\treturn (\n\t\t<>\n\t\t\t<div className='headerRow'>\n\t\t\t\t<div className='transactionItem'>Latest Transactions by Hash</div>\n\t\t\t\t<div className='transactionItem'>Value Out</div>\n\t\t\t</div>\n\t\t\t<div>{list}</div>\n\t\t</>\n\t);\n};\n\nexport default RunningTransactions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RunningBlocks = (props) => {\n\tconst list = props.runningBlocks.map((block) => {\n\t\treturn (\n\t\t\t<div key={block.height} className='dataRow'>\n\t\t\t\t<div className='blockItem'>\n\t\t\t\t\t<Link to={props.hostingURL + '/block/' + block.hash}>\n\t\t\t\t\t\t{block.height}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className='blockItem'>{block.tx.length}</div>\n\t\t\t\t<div className='blockItem'>{block.size}</div>\n\t\t\t</div>\n\t\t);\n\t});\n\tlist.sort((a, b) => b.key - a.key);\n\treturn (\n\t\t<>\n\t\t\t<div className='headerRow'>\n\t\t\t\t<div className='blockItem'>Latest Blocks by Height</div>\n\t\t\t\t<div className='blockItem'>Transactions</div>\n\t\t\t\t<div className='blockItem'>Size</div>\n\t\t\t</div>\n\t\t\t<div>{list}</div>\n\t\t</>\n\t);\n};\n\nexport default RunningBlocks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RandomAssets = (props) => {\n\tconst list = props.randomAssets.map((asset) => {\n\t\treturn (\n\t\t\t<div key={asset.name} className='dataRow'>\n\t\t\t\t<div className='assetItem'>\n\t\t\t\t\t<Link to={props.hostingURL + '/asset/' + asset.link}>\n\t\t\t\t\t\t{asset.name}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className='assetItem'>{asset.amount}</div>\n\t\t\t\t<div className='assetItem'>{asset.block}</div>\n\t\t\t</div>\n\t\t);\n\t});\n\treturn (\n\t\t<>\n\t\t\t<div className='headerRow'>\n\t\t\t\t<div className='assetItem'>Random Assets</div>\n\t\t\t\t<div className='assetItem'>Amount</div>\n\t\t\t\t<div className='assetItem'>Creation Block</div>\n\t\t\t</div>\n\t\t\t<div>{list}</div>\n\t\t</>\n\t);\n};\n\nexport default RandomAssets;\n","import React from 'react';\nimport RunningTransactions from './RunningTransactions';\nimport RunningBlocks from './RunningBlocks';\nimport RandomAssets from './RandomAssets';\nimport './Home.css';\n\nconst Home = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className='homeSection runningBlocks'>\n\t\t\t\t<RunningBlocks\n\t\t\t\t\trunningBlocks={props.runningBlocks}\n\t\t\t\t\thostingURL={props.hostingURL}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='homeSection runningTransactions'>\n\t\t\t\t<RunningTransactions\n\t\t\t\t\trunningTransactions={props.runningTransactions}\n\t\t\t\t\thostingURL={props.hostingURL}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='homeSection randomAssets'>\n\t\t\t\t<RandomAssets\n\t\t\t\t\trandomAssets={props.randomAssets}\n\t\t\t\t\thostingURL={props.hostingURL}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TransactionItem.css';\n\nclass TransactionItem extends Component {\n\trender() {\n\t\tconst vinList = this.props.transaction.vin.map((addrIn) => {\n\t\t\tif (addrIn.coinbase) {\n\t\t\t\treturn <div key={addrIn.n}>No Inputs, New Coins</div>;\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={addrIn.n}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={this.props.hostingURL + '/addr/' + addrIn.addr}\n\t\t\t\t\t\t\tonClick={() => this.props.setAddress(addrIn.addr)}>\n\t\t\t\t\t\t\t{addrIn.addr}\n\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t<span>{addrIn.value}</span>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tconst voutList = this.props.transaction.vout.map((addrOut) => {\n\t\t\tif (addrOut.scriptPubKey.addresses) {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={addrOut.n}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\tthis.props.hostingURL +\n\t\t\t\t\t\t\t\t'/addr/' +\n\t\t\t\t\t\t\t\taddrOut.scriptPubKey.addresses[0]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tthis.props.setAddress(addrOut.scriptPubKey.addresses[0])\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t{addrOut.scriptPubKey.addresses[0]}\n\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t{addrOut.value}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn <div key={addrOut.n}>OP RETURN</div>;\n\t\t\t}\n\t\t});\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tTransaction:{' '}\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={this.props.hostingURL + '/tx/' + this.props.transaction.txid}>\n\t\t\t\t\t\t\t{this.props.transaction.txid}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='addressSection'>Inputs: {vinList}</div>\n\t\t\t\t<div className='addressSection'>Outputs: {voutList}</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>Fee: {this.props.transaction.fees}</p>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default TransactionItem;\n","import React, { Component } from 'react';\nimport TransactionItem from '../TransactionItem/TransactionItem';\nimport './Transactions.css';\n\nclass Transactions extends Component {\n\trender() {\n\t\tconst txList = this.props.transactions.map((tx) => {\n\t\t\treturn (\n\t\t\t\t<div key={tx.txid} className='transactionSection'>\n\t\t\t\t\t<TransactionItem\n\t\t\t\t\t\ttransaction={tx}\n\t\t\t\t\t\tsetStateElement={this.props.setStateElement}\n\t\t\t\t\t\tsetAddress={this.props.setAddress}\n\t\t\t\t\t\thostingURL={this.props.hostingURL}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn <>{txList}</>;\n\t}\n}\n\nexport default Transactions;\n","import React, { Component } from 'react';\nimport Transactions from '../Transactions/Transactions';\nimport { Link } from 'react-router-dom';\nimport './Transaction.css';\n\nclass Transaction extends Component {\n\tcomponentDidMount() {\n\t\t// this.props.setStateElement('transaction', this.props.match.params.txHash);\n\t\tthis.props.setTransaction(this.props.match.params.txHash);\n\t}\n\n\tUnix_timestamp(t) {\n\t\tvar dt = new Date(t * 1000);\n\t\treturn dt + '';\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='mainTransactionSection'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tReceived Time: {this.Unix_timestamp(this.props.transaction.time)}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMined Time:{' '}\n\t\t\t\t\t\t{this.props.transaction.blocktime\n\t\t\t\t\t\t\t? this.Unix_timestamp(this.props.transaction.blocktime)\n\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIncluded in Block:{' '}\n\t\t\t\t\t\t{this.props.transaction.blockhash ? (\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tthis.props.hostingURL +\n\t\t\t\t\t\t\t\t\t'/block/' +\n\t\t\t\t\t\t\t\t\tthis.props.transaction.blockhash\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{this.props.transaction.blockhash}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Transactions\n\t\t\t\t\ttransactions={this.props.transactions}\n\t\t\t\t\tsetStateElement={this.props.setStateElement}\n\t\t\t\t\tsetAddress={this.props.setAddress}\n\t\t\t\t\thostingURL={this.props.hostingURL}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Transaction;\n","import React, { Component } from 'react';\nimport Transactions from '../Transactions/Transactions';\nimport Button from 'react-bootstrap/Button';\nimport './Block.css';\nimport { Link } from 'react-router-dom';\n\nclass Block extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.controller = new AbortController();\n\t\tthis.signal = this.controller.signal;\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.props.clearBlock();\n\t\tconst signal = this.signal;\n\t\tthis.props.setBlock(this.props.match.params.blockHash, { signal });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.controller.abort();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='blockSection'>\n\t\t\t\t\t<h3>Block Height:{this.props.block.height}</h3>\n\t\t\t\t\t<p>Block Hash:{this.props.block.hash}</p>\n\t\t\t\t\t<div className='blockNav'>\n\t\t\t\t\t\t<div className='previousBlock'>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tthis.props.hostingURL +\n\t\t\t\t\t\t\t\t\t'/block/' +\n\t\t\t\t\t\t\t\t\tthis.props.block.previousblockhash\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tthis.props.setBlock(this.props.block.previousblockhash)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\tPrevious Block\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='nextBlock'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tthis.props.hostingURL +\n\t\t\t\t\t\t\t\t\t'/block/' +\n\t\t\t\t\t\t\t\t\tthis.props.block.nextblockhash\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tthis.props.setBlock(this.props.block.nextblockhash)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{this.props.block.nextblockhash ? 'Next Block' : ''}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Transactions\n\t\t\t\t\ttransactions={this.props.transactions}\n\t\t\t\t\tsetStateElement={this.props.setStateElement}\n\t\t\t\t\tsetAddress={this.props.setAddress}\n\t\t\t\t\thostingURL={this.props.hostingURL}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='primary'\n\t\t\t\t\tonClick={() => this.props.setMoreBlockTransactions()}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tthis.props.transactions.length < this.props.block.tx.length\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: 'hidden'\n\t\t\t\t\t}>\n\t\t\t\t\tLoad More Transactions\n\t\t\t\t</Button>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Block;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport './Header.css';\n\nconst Styles = styled.div`\n\t.navbar {\n\t\tbackground-color: #222;\n\t}\n\n\t.navbar-brand,\n\t.navbar-nav,\n\t.nav-link {\n\t\tcolor: #bbb;\n\n\t\t&:hover {\n\t\t\tcolor: white;\n\t\t}\n\t}\n`;\n\nconst Header = (props) => {\n\tconst list0 = props.searchTest[0].slice(0, 10).map((item) => (\n\t\t<div key={item}>\n\t\t\t<Link\n\t\t\t\tto={props.hostingURL + '/asset/' + props.convertToUrlNew(item)}\n\t\t\t\tonClick={props.searchClicked}\n\t\t\t\tdata-category='asset'\n\t\t\t\tdata-hash={item}>\n\t\t\t\t{'Asset: ' + item}\n\t\t\t</Link>\n\t\t</div>\n\t));\n\tconst list1 =\n\t\tJSON.stringify(props.searchTest[1]) !== JSON.stringify(['Not found']) ? (\n\t\t\t<Link\n\t\t\t\tto={props.hostingURL + '/block/' + props.searchTest[1].blockHash}\n\t\t\t\tonClick={props.searchClicked}\n\t\t\t\tdata-category='block'\n\t\t\t\tdata-hash={props.searchTest[1].blockHash}>\n\t\t\t\t{'Block: ' + props.searchTest[1].blockHash.substring(0, 30) + '...'}\n\t\t\t</Link>\n\t\t) : (\n\t\t\t''\n\t\t);\n\tconst list2 =\n\t\tJSON.stringify(props.searchTest[2]) !== JSON.stringify(['Not found']) ? (\n\t\t\t<Link\n\t\t\t\tto={props.hostingURL + '/block/' + props.searchTest[2].hash}\n\t\t\t\tonClick={props.searchClicked}\n\t\t\t\tdata-category='block'\n\t\t\t\tdata-hash={props.searchTest[2].hash}>\n\t\t\t\t{'Block: ' + props.searchTest[2].hash.substring(0, 30) + '...'}\n\t\t\t</Link>\n\t\t) : (\n\t\t\t''\n\t\t);\n\tconst list3 =\n\t\tJSON.stringify(props.searchTest[3]) !== JSON.stringify(['Not found']) ? (\n\t\t\t<Link\n\t\t\t\tto={props.hostingURL + '/addr/' + props.searchTest[3].addrStr}\n\t\t\t\tonClick={props.searchClicked}\n\t\t\t\tdata-category='address'\n\t\t\t\tdata-hash={props.searchTest[3].addrStr}>\n\t\t\t\t{'Address: ' + props.searchTest[3].addrStr}\n\t\t\t</Link>\n\t\t) : (\n\t\t\t''\n\t\t);\n\tconst list4 =\n\t\tJSON.stringify(props.searchTest[4]) !== JSON.stringify(['Not found']) ? (\n\t\t\t<Link\n\t\t\t\tto={props.hostingURL + '/tx/' + props.searchTest[4].txid}\n\t\t\t\tonClick={props.searchClicked}\n\t\t\t\tdata-category='tx'\n\t\t\t\tdata-hash={props.searchTest[4].txid}>\n\t\t\t\t{'Transaction: ' + props.searchTest[4].txid.substring(0, 30) + '...'}\n\t\t\t</Link>\n\t\t) : (\n\t\t\t''\n\t\t);\n\n\treturn (\n\t\t<Styles>\n\t\t\t<Navbar expand='lg' fixed='top'>\n\t\t\t\t<Navbar.Brand>\n\t\t\t\t\t<Link to={props.hostingURL + '/'}>Ravencoin Explorer</Link>\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Nav className='ml-auto'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tplaceholder='Search for Block, Address, Transaction, or Asset'\n\t\t\t\t\t\tonChange={props.handleChange.bind(this)}\n\t\t\t\t\t\tname='search'\n\t\t\t\t\t\tvalue={props.search}></input>\n\t\t\t\t\t<div className='search-overlay'>\n\t\t\t\t\t\t<div>{list1}</div>\n\t\t\t\t\t\t<div>{list2}</div>\n\t\t\t\t\t\t<div>{list3}</div>\n\t\t\t\t\t\t<div>{list4}</div>\n\t\t\t\t\t\t<div>{list0}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t</Styles>\n\t);\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Transactions from '../Transactions/Transactions';\nimport './Address.css';\n\nclass Address extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.controller = new AbortController();\n\t\tthis.signal = this.controller.signal;\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.props.clearAddress();\n\t\tconst signal = this.signal;\n\t\tthis.props.setAddress(this.props.match.params.address, { signal });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.controller.abort();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='mainAddressSection'>\n\t\t\t\t\t<h3>{this.props.address.addrStr}</h3>\n\t\t\t\t\t<p>Final Balance:{this.props.address.totalReceived} RVN</p>\n\t\t\t\t\t<p>Final Balance:{this.props.address.totalSent} RVN</p>\n\t\t\t\t\t<p>Final Balance:{this.props.address.balance} RVN</p>\n\t\t\t\t\t<p>Transactions:{this.props.address.txApperances}</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Transactions\n\t\t\t\t\t\ttransactions={this.props.transactions}\n\t\t\t\t\t\tsetStateElement={this.props.setStateElement}\n\t\t\t\t\t\tsetAddress={this.props.setAddress}\n\t\t\t\t\t\thostingURL={this.props.hostingURL}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.props.setMoreAddressTransactions()}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tthis.props.transactions.length <\n\t\t\t\t\t\tthis.props.address.transactions.length\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: 'hidden'\n\t\t\t\t\t}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tLoad More Transactions\n\t\t\t\t</button>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Address;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Asset extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.setStateElement('asset', this.props.match.params.asset);\n\t}\n\n\trender() {\n\t\tconst asset = Object.keys(this.props.asset)[0];\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>name: {asset}</p>\n\t\t\t\t<p>amount: {this.props.asset[asset].amount}</p>\n\t\t\t\t<p>units: {this.props.asset[asset].units}</p>\n\t\t\t\t<p>reissuable: {this.props.asset[asset].reissuable}</p>\n\t\t\t\t<p>has_ipfs: {this.props.asset[asset].has_ipfs}</p>\n\t\t\t\t<p>block_height: {this.props.asset[asset].block_height}</p>\n\t\t\t\t<p>\n\t\t\t\t\tblockhash:{' '}\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={\n\t\t\t\t\t\t\tthis.props.hostingURL +\n\t\t\t\t\t\t\t'/block/' +\n\t\t\t\t\t\t\tthis.props.asset[asset].blockhash\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t{this.props.asset[asset].blockhash}\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Asset;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nconst Layout = (props) => <Container>{props.children}</Container>;\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Transaction from './components/Transaction/Transaction';\nimport Block from './components/Block/Block';\nimport Header from './components/Header/Header';\nimport Address from './components/Address/Address';\nimport Asset from './components/Asset/Asset';\nimport Layout from './components/Layout';\n\nconst numTransactions = 10;\nconst numBlocks = 10;\nconst numRandomAssets = 10;\nconst loadPerTime = 25;\nconst apiUrl = 'https://ravenexplorer.net';\nconst totalAssets = 23463;\nconst hostingURL = '';\nconst randomAssetURL = '/api/assets?asset=*&size=1&skip=';\nconst assetURL = '/api/assets?verbose=true&asset=';\nconst assetSearchURL = '/api/assets?asset=';\nconst addressURL = '/api/addr/';\nconst blockIndexURL = '/api/block-index/';\nconst blockHashURL = '/api/block/';\nconst txURL = '/api/tx/';\nconst statusURL = '/api/status?q=getInfo';\nconst stateKeyURL = {\n\taddress: addressURL,\n\tasset: assetURL,\n\tblock: blockHashURL,\n\ttransaction: txURL,\n};\nconst emptyBlock = { tx: [] };\nconst emptyTransactions = [{ txid: '', vin: [], vout: [] }];\nconst emptyAddress = { transactions: [] };\nconst emptyRunningTransactions = [\n\t{ txid: 'a' },\n\t{ txid: 'b' },\n\t{ txid: 'c' },\n\t{ txid: 'd' },\n\t{ txid: 'e' },\n\t{ txid: 'f' },\n\t{ txid: 'g' },\n\t{ txid: 'h' },\n\t{ txid: 'i' },\n\t{ txid: 'j' },\n];\n\nconst emptySearchTest = [\n\t[],\n\t['Not found'],\n\t['Not found'],\n\t['Not found'],\n\t['Not found'],\n];\nconst apiSpecialCharacter = ['#'];\nconst apiSpecialMap = ['%23'];\nconst urlSpecialCharacter = ['/', '#'];\nconst urlSpecialMap = ['%2F', '%23'];\n\n// const apiUrl = 'http://192.168.1.21:3100';\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thostingURL: '',\n\t\t\ttransaction: { vin: [], vout: [] },\n\t\t\trunningTransactions: emptyRunningTransactions,\n\t\t\tblock: emptyBlock,\n\t\t\trunningBlocks: [],\n\t\t\taddress: emptyAddress,\n\t\t\ttransactions: emptyTransactions,\n\t\t\tasset: { temp: {} },\n\t\t\trandomAssets: [],\n\t\t\tsearch: '',\n\t\t\tsearchMatch: [],\n\t\t\tsearchTest: emptySearchTest,\n\t\t\tlatestBlock: 0,\n\t\t};\n\n\t\tthis.myRef = React.createRef();\n\t}\n\n\taddRunningTransaction(newTransaction) {\n\t\tconst newTransactionsList = [\n\t\t\tnewTransaction,\n\t\t\t...this.state.runningTransactions,\n\t\t];\n\n\t\t// remove transactions if more than 10 in the list\n\t\twhile (newTransactionsList.length > numTransactions) {\n\t\t\tnewTransactionsList.pop();\n\t\t}\n\n\t\tthis.setState({ runningTransactions: newTransactionsList });\n\t}\n\n\taddRunningBlock(newBlockData) {\n\t\tconst newBlocksList = [newBlockData, ...this.state.runningBlocks];\n\n\t\t// remove blocks if more than wanted in the list\n\t\twhile (newBlocksList.length > numBlocks) {\n\t\t\tnewBlocksList.pop();\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\trunningBlocks: newBlocksList,\n\t\t\t},\n\t\t\t() => this.setLatestBlock()\n\t\t);\n\t}\n\n\tsetLatestBlock() {\n\t\tconst blockHeights = [];\n\n\t\tfor (let i = 0; i < this.state.runningBlocks.length; i++) {\n\t\t\tblockHeights.push(this.state.runningBlocks[i].height);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tlatestBlock: Math.max(...blockHeights),\n\t\t});\n\t}\n\n\tsetStateElement(stateKey, item) {\n\t\tlet url = stateKeyURL[stateKey];\n\n\t\tthis.getAPIElement(url, item)\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({ [stateKey]: data });\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\t}\n\n\tasync fetchBlock(blockHash, { signal } = {}) {\n\t\tconst blockResponse = await fetch(apiUrl + blockHashURL + blockHash, {\n\t\t\tsignal,\n\t\t}).catch((error) => console.error('wow an error!', error));\n\t\tconst block = await blockResponse.json();\n\t\tconst firstTransactions = block.tx.slice(0, 10);\n\n\t\tconst transactionFetches = firstTransactions.map(async (tx) => {\n\t\t\tconst response = await fetch(apiUrl + txURL + tx, {\n\t\t\t\tsignal,\n\t\t\t}).catch((error) => console.error('wow an error!', error));\n\t\t\treturn response.json();\n\t\t});\n\n\t\treturn [block, await Promise.all(transactionFetches)];\n\t}\n\n\tasync setBlock(blockHash, { signal } = {}) {\n\t\tconst blockData = await this.fetchBlock(blockHash, { signal });\n\n\t\tthis.setState({ block: blockData[0], transactions: blockData[1] });\n\t}\n\n\tasync setTransaction(transactionHash, { signal } = {}) {\n\t\tconst transactionData = await this.getAPIElement(txURL, transactionHash);\n\n\t\tthis.setState({\n\t\t\ttransaction: transactionData,\n\t\t\ttransactions: [transactionData],\n\t\t});\n\t}\n\n\tclearBlock() {\n\t\tthis.setState({ block: emptyBlock, transactions: emptyTransactions });\n\t}\n\n\tloadMoreBlockTransactions() {\n\t\tconst block = this.state.block;\n\t\tconst currTransactions = this.state.transactions.length;\n\t\tconst nextTransactions = block.tx.slice(\n\t\t\tcurrTransactions,\n\t\t\tcurrTransactions + loadPerTime\n\t\t);\n\n\t\tconst transactionFetches = nextTransactions.map(async (tx) => {\n\t\t\tconst response = await fetch(apiUrl + txURL + tx).catch((error) => {\n\t\t\t\tconsole.error('wow an error!', error);\n\t\t\t});\n\t\t\treturn response.json();\n\t\t});\n\n\t\treturn Promise.all(transactionFetches);\n\t}\n\n\tasync setMoreBlockTransactions() {\n\t\tconst transactionData = await this.loadMoreBlockTransactions();\n\n\t\tconst newTransactions = [...this.state.transactions].concat(\n\t\t\ttransactionData\n\t\t);\n\n\t\tthis.setState({\n\t\t\ttransactions: newTransactions,\n\t\t});\n\t}\n\n\tasync fetchAddress(addressHash, { signal } = {}) {\n\t\tconst addressResponse = await fetch(apiUrl + addressURL + addressHash, {\n\t\t\tsignal,\n\t\t}).catch((error) => console.error('wow an error!', error));\n\t\tconst address = await addressResponse.json();\n\t\tconst firstTransactions = address.transactions.slice(0, 10);\n\n\t\tconst transactionFetches = firstTransactions.map(async (tx) => {\n\t\t\tconst response = await fetch(apiUrl + txURL + tx, {\n\t\t\t\tsignal,\n\t\t\t}).catch((error) => console.error('wow an error!', error));\n\t\t\treturn response.json();\n\t\t});\n\n\t\treturn [address, await Promise.all(transactionFetches)];\n\t}\n\n\tasync setAddress(addressHash, { signal } = {}) {\n\t\tconst addressData = await this.fetchAddress(addressHash, {\n\t\t\tsignal,\n\t\t});\n\n\t\tthis.setState({ address: addressData[0], transactions: addressData[1] });\n\t}\n\n\tclearAddress() {\n\t\tthis.setState({ address: emptyAddress });\n\t}\n\n\tloadMoreAddressTransactions() {\n\t\tconst address = this.state.address;\n\t\tconst currTransactions = this.state.transactions.length;\n\t\tconst nextTransactions = address.transactions.slice(\n\t\t\tcurrTransactions,\n\t\t\tcurrTransactions + loadPerTime\n\t\t);\n\n\t\tconst transactionFetches = nextTransactions.map(async (tx) => {\n\t\t\tconst response = await fetch(apiUrl + txURL + tx).catch((error) => {\n\t\t\t\tconsole.error('wow an error!', error);\n\t\t\t});\n\t\t\treturn response.json();\n\t\t});\n\n\t\treturn Promise.all(transactionFetches);\n\t}\n\n\tasync setMoreAddressTransactions() {\n\t\tconst transactionData = await this.loadMoreAddressTransactions();\n\n\t\tconst newTransactions = [...this.state.transactions].concat(\n\t\t\ttransactionData\n\t\t);\n\n\t\tthis.setState({\n\t\t\ttransactions: newTransactions,\n\t\t});\n\t}\n\n\taddTransaction(newTransaction) {\n\t\tconst newTransactionsList = [newTransaction, ...this.state.transactions];\n\t\tthis.setState({ transactions: newTransactionsList });\n\t}\n\n\taddStateElement(stateKey, item, position = 'back') {\n\t\tconst currArray = [...this.state[stateKey]];\n\t\tif (position === 'front') {\n\t\t\tcurrArray.unshift(item);\n\t\t} else {\n\t\t\tcurrArray.push(item);\n\t\t}\n\t\tthis.setState({ [stateKey]: currArray });\n\t}\n\n\tgetAPIElement(endPoint, item) {\n\t\tlet itemString = item.toString();\n\n\t\tconst replaceAt = (string, index, replace) => {\n\t\t\treturn string.substring(0, index) + replace + string.substring(index + 1);\n\t\t};\n\n\t\tconst convertToApi = (inputString) => {\n\t\t\tlet position;\n\t\t\tlet outputString = inputString.slice();\n\n\t\t\tfor (let i = 0; i < apiSpecialCharacter.length; i++) {\n\t\t\t\tposition = outputString.indexOf(apiSpecialCharacter[i]);\n\t\t\t\twhile (position > 0) {\n\t\t\t\t\toutputString = replaceAt(outputString, position, apiSpecialMap[i]);\n\t\t\t\t\tposition = outputString.indexOf(apiSpecialCharacter[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn outputString;\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(apiUrl + endPoint + convertToApi(itemString))\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tresolve(data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => reject(error));\n\t\t});\n\t}\n\n\t//////////////////////\n\t//\n\t// Startup\n\t//\n\t//////////////////////\n\n\tasync addRandomAssets() {\n\t\tlet randomAsset;\n\n\t\tconst replaceAt = (string, index, replace) => {\n\t\t\treturn string.substring(0, index) + replace + string.substring(index + 1);\n\t\t};\n\n\t\tconst convertToUrl = (inputString) => {\n\t\t\tlet position;\n\t\t\tlet outputString = inputString.slice();\n\n\t\t\tfor (let i = 0; i < urlSpecialCharacter.length; i++) {\n\t\t\t\tposition = outputString.indexOf(urlSpecialCharacter[i]);\n\t\t\t\twhile (position > 0) {\n\t\t\t\t\toutputString = replaceAt(outputString, position, urlSpecialMap[i]);\n\t\t\t\t\tposition = outputString.indexOf(urlSpecialCharacter[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn outputString;\n\t\t};\n\n\t\tlet app = this;\n\n\t\tfor (let i = 0; i < numRandomAssets; i++) {\n\t\t\trandomAsset = Math.floor(Math.random() * totalAssets) + 1;\n\t\t\tthis.getAPIElement(randomAssetURL, randomAsset).then((assetName) => {\n\t\t\t\tthis.getAPIElement(assetURL, assetName[0]).then((data) => {\n\t\t\t\t\tconst assetData = data[assetName[0]];\n\t\t\t\t\tapp.addStateElement('randomAssets', {\n\t\t\t\t\t\tname: assetData.name,\n\t\t\t\t\t\tlink: convertToUrl(assetData.name),\n\t\t\t\t\t\tamount: assetData.amount,\n\t\t\t\t\t\tblock: assetData.block_height,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\taddRecentBlocks() {\n\t\tlet latestBlock;\n\t\tlet app = this;\n\n\t\tconst callBlocks = () => {\n\t\t\tfor (let i = 0; i < numBlocks; i++) {\n\t\t\t\tapp.getAPIElement(blockIndexURL, latestBlock - i).then((data) => {\n\t\t\t\t\tapp\n\t\t\t\t\t\t.getAPIElement(blockHashURL, data.blockHash)\n\t\t\t\t\t\t.then((data) => app.addStateElement('runningBlocks', data));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.getAPIElement(statusURL, '').then((data) => {\n\t\t\tlatestBlock = data.info.blocks;\n\t\t\tthis.setState({ latestBlock: latestBlock });\n\t\t\tcallBlocks();\n\t\t});\n\t}\n\n\tio() {\n\t\t// this lazy function does nothing\n\t\t// but satisfies React when React wants to find a this.io function before\n\t\t// loading the websocket stuff\n\t}\n\n\tasync componentDidMount() {\n\t\t// get recent blocks, random assets\n\t\tthis.addRandomAssets();\n\t\tthis.addRecentBlocks();\n\n\t\t// create web socket\n\t\tconst script = document.createElement('script');\n\t\tscript.src = 'https://ravenexplorer.net/socket.io/socket.io.js';\n\t\tscript.async = true;\n\t\tdocument.body.appendChild(script);\n\n\t\tlet originalThis = this;\n\n\t\tsetTimeout(function () {\n\t\t\tconst room = 'inv';\n\n\t\t\t// react really doesn't like this unless there is a lazy this.io function above\n\t\t\tconst socket = this.io(apiUrl + '/');\n\n\t\t\tsocket.on('connect', function () {\n\t\t\t\t// Join the room.\n\t\t\t\tsocket.emit('subscribe', room);\n\t\t\t});\n\t\t\tsocket.on('tx', function (txData) {\n\t\t\t\toriginalThis\n\t\t\t\t\t.getAPIElement(txURL, txData.txid)\n\t\t\t\t\t.then((txData) => originalThis.addRunningTransaction(txData))\n\t\t\t\t\t.catch((error) => console.log(error));\n\t\t\t});\n\t\t\tsocket.on('block', function (blockHash) {\n\t\t\t\toriginalThis\n\t\t\t\t\t.getAPIElement(blockHashURL, blockHash)\n\t\t\t\t\t.then((blockData) => originalThis.addRunningBlock(blockData))\n\t\t\t\t\t.catch((error) => console.log(error));\n\t\t\t});\n\t\t}, 500); // delay here so that the socket js file can be loaded from remote\n\t}\n\n\t//////////////////////\n\t//\n\t// Search functions\n\t//\n\t//////////////////////\n\n\thandleChange(event) {\n\t\tthis.setState({ [event.target.name]: event.target.value }, () => {\n\t\t\tthis.clearThenSpeculativeSearch();\n\t\t});\n\t}\n\n\tclearThenSpeculativeSearch() {\n\t\tthis.setState({ searchTest: emptySearchTest }, () => {\n\t\t\tthis.speculativeSearch();\n\t\t});\n\t}\n\n\tclearSearch() {\n\t\tthis.setState({ search: [] }, () => {\n\t\t\tthis.setState({ searchTest: emptySearchTest });\n\t\t});\n\t}\n\n\tspeculativeSearch() {\n\t\t// search for Block, Transaction, Address, or Asset and build an array of all possible matches\n\t\tif (this.state.search !== '') {\n\t\t\tthis.fetchSearch(this.state.search);\n\t\t}\n\t}\n\n\tsearchClicked(props) {\n\t\tif (props.target.dataset.category === 'addr') {\n\t\t\tthis.setAddress(props.target.dataset.hash);\n\t\t} else if (props.target.dataset.category === 'block') {\n\t\t\tthis.setBlock(props.target.dataset.hash);\n\t\t} else if (props.target.dataset.category === 'tx') {\n\t\t\tthis.setTransaction(props.target.dataset.hash);\n\t\t} else if (props.target.dataset.category === 'asset') {\n\t\t\tthis.setStateElement(\n\t\t\t\t'asset',\n\t\t\t\tthis.convertToUrlNew(props.target.dataset.hash)\n\t\t\t);\n\t\t}\n\n\t\tthis.clearSearch();\n\t}\n\n\taddSearchMatch(category, object) {\n\t\tconst newSearchObject = {\n\t\t\tcategory: category,\n\t\t\tobject: object,\n\t\t};\n\t\tconst newSearchMatchList = [...this.state.searchMatch];\n\n\t\tnewSearchMatchList.push(newSearchObject);\n\n\t\tthis.setState({\n\t\t\tsearchMatch: newSearchMatchList,\n\t\t});\n\t}\n\n\t///// new search matching\n\n\treplaceAtNew = (string, index, replace) => {\n\t\treturn string.substring(0, index) + replace + string.substring(index + 1);\n\t};\n\n\tconvertToUrlNew = (inputString) => {\n\t\tlet position;\n\t\tlet outputString = inputString.slice();\n\n\t\tfor (let i = 0; i < urlSpecialCharacter.length; i++) {\n\t\t\tposition = outputString.indexOf(urlSpecialCharacter[i]);\n\t\t\twhile (position > 0) {\n\t\t\t\toutputString = this.replaceAtNew(\n\t\t\t\t\toutputString,\n\t\t\t\t\tposition,\n\t\t\t\t\turlSpecialMap[i]\n\t\t\t\t);\n\t\t\t\tposition = outputString.indexOf(urlSpecialCharacter[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn outputString;\n\t};\n\n\tasync fetchSearch(searchTerm, { signal } = {}) {\n\t\tconst searchTrials = [\n\t\t\t{\n\t\t\t\tsearchCategory: 'asset',\n\t\t\t\tsearchURL: assetSearchURL,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsearchCategory: 'blockIndex',\n\t\t\t\tsearchURL: blockIndexURL,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsearchCategory: 'blockHash',\n\t\t\t\tsearchURL: blockHashURL,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsearchCategory: 'address',\n\t\t\t\tsearchURL: addressURL,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsearchCategory: 'transaction',\n\t\t\t\tsearchURL: txURL,\n\t\t\t},\n\t\t];\n\n\t\tconst searchFetches = searchTrials.map(async (trial) => {\n\t\t\tconst response = await fetch(\n\t\t\t\tapiUrl +\n\t\t\t\t\ttrial.searchURL +\n\t\t\t\t\tthis.convertToUrlNew(searchTerm) +\n\t\t\t\t\t(trial.searchCategory === 'asset' ? '*' : ''),\n\t\t\t\t{\n\t\t\t\t\tsignal,\n\t\t\t\t}\n\t\t\t).catch((error) => console.error('wow an error!', error));\n\t\t\treturn response.json();\n\t\t});\n\n\t\tthis.setState({ searchTest: await Promise.all(searchFetches) });\n\t}\n\n\tsetSearch({ signal } = {}) {\n\t\tconst searchData = this.fetchSearch(this.state.search, { signal });\n\n\t\treturn searchData;\n\t}\n\n\t//////////////////////\n\t//\n\t// Render, Router, Links\n\t//\n\t//////////////////////\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Layout>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\thandleChange={this.handleChange.bind(this)}\n\t\t\t\t\t\t\t\tsearchTest={this.state.searchTest}\n\t\t\t\t\t\t\t\tsearchClicked={this.searchClicked.bind(this)}\n\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\tconvertToUrlNew={this.convertToUrlNew.bind(this)}\n\t\t\t\t\t\t\t\thostingURL={this.state.hostingURL}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath={hostingURL + '/'}\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\trender={(routerProps) => (\n\t\t\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\t\t\trunningTransactions={this.state.runningTransactions}\n\t\t\t\t\t\t\t\t\t\trunningBlocks={this.state.runningBlocks}\n\t\t\t\t\t\t\t\t\t\trandomAssets={this.state.randomAssets}\n\t\t\t\t\t\t\t\t\t\thostingURL={this.state.hostingURL}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath={hostingURL + '/tx/:txHash'}\n\t\t\t\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Transaction\n\t\t\t\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t\t\t\t\tsetStateElement={this.setStateElement.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\ttransactions={this.state.transactions}\n\t\t\t\t\t\t\t\t\t\t\tsetAddress={this.setAddress.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tsetTransaction={this.setTransaction.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\ttransaction={this.state.transaction}\n\t\t\t\t\t\t\t\t\t\t\thostingURL={this.state.hostingURL}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath={hostingURL + '/block/:blockHash'}\n\t\t\t\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Block\n\t\t\t\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t\t\t\t\tsetBlock={this.setBlock.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tsetAddress={this.setAddress.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tsetStateElement={this.setStateElement.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tblock={this.state.block}\n\t\t\t\t\t\t\t\t\t\t\ttransactions={this.state.transactions}\n\t\t\t\t\t\t\t\t\t\t\tsetMoreBlockTransactions={this.setMoreBlockTransactions.bind(\n\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonScroll={this.handleScroll}\n\t\t\t\t\t\t\t\t\t\t\tclearBlock={this.clearBlock.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tlatestBlock={this.state.latestBlock}\n\t\t\t\t\t\t\t\t\t\t\thostingURL={this.state.hostingURL}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath={hostingURL + '/addr/:address'}\n\t\t\t\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Address\n\t\t\t\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t\t\t\t\tsetAddress={this.setAddress.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tsetStateElement={this.setStateElement.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\taddress={this.state.address}\n\t\t\t\t\t\t\t\t\t\t\ttransactions={this.state.transactions}\n\t\t\t\t\t\t\t\t\t\t\tclearAddress={this.clearAddress.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tsetMoreAddressTransactions={this.setMoreAddressTransactions.bind(\n\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\thostingURL={this.state.hostingURL}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath={hostingURL + '/asset/:asset'}\n\t\t\t\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Asset\n\t\t\t\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t\t\t\t\tsetStateElement={this.setStateElement.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tasset={this.state.asset}\n\t\t\t\t\t\t\t\t\t\t\thostingURL={this.state.hostingURL}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</div>\n\t\t\t\t</Layout>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}